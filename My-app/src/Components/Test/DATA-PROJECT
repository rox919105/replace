///UserContainer

const mapDispatchToProps = (dispatch) => {
    return {
        follow: (userId) => {
            dispatch(followAC(userId))
        },
        unFollow: (userId) => {
            dispatch(unFollowAC(userId))
        },
        setUsers: (users) => {
            dispatch(setUsersAC(users))
        },
        setCurrentPage: (currentPage) => {
            dispatch(setCurrentPageAC(currentPage))
        },
        setTotalUsersCount: (totalCount) => {
            dispatch(setTotalUsersCountAC(totalCount))
        },
        toggleIsFethcing: (isFetching) => {
            dispatch(toggleIsFethcingAC(isFetching))
        },


    }
};

//profileContainer


componentDidMount() {
     
        let userId = this.props.match.params.userId;
        if (!userId) {
            userId = 12933
        }
    usersAPI.setProfile(userId)
        .then(data => {
           this.props.setUserProfile(data);
        });

//headerContainer

componentDidMount() {
usersAPI.setAuth()
            .then(data => {
                if (data.resultCode === 0) {
                    debugger
                    let {id, email, login} = data.data;
                    this.props.setAuthUserData(id, email, login)
                }
            });
}